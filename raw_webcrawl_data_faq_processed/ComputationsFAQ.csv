Dataflow doesn't have the concept of time. Does that mean that we cannot use time in our algorithms?,"You can use the local clock of an agent in its receive function. Indeed, it can be helpful to do so. For example, you can have a sleep statement in a receive function. Properties of all dataflows of a system are properties of all timelines of the system. Dataflow doesn't make any assumptions about time, and so it works for all possible evaluations over time. You may be able to determine more properties of a system by making assumptions about local clocks; however, properties that you prove without making assumptions are properties that hold for any assumptions that you make."
Does dataflow assume that events are instantaneous?,"Dataflow makes no assumptions about the duration of an event. The only states of an agent that appear in dataflow are the states. You can, however, think of a vertex in a dataflow as an event in which a receive is executed in an infitisimally small time."
Local clocks can be synchronized using NTP and other protocols. Why do you assume that clocks aren't synchronized?,"Local clocks can, indeed, be synchronized very accurately; however, we do not assume that they are perfect. We use agents' local clocks for evaluating algorithm performance but not for proving correctness because even a small drift can cause race conditions. Consider an algorithm in which one agent carries out a computation starting at 1pm and another agent carries out a computation starting at 2pm. When we prove the correctness of our algorithms, we allow for the unlikely possibility that the agent starting its computation at 2pm does so before the agent that starts at 1pm. For evaluating performance, however, we assume that the agent that starts at 1pm usually does so before the agent that starts at 2pm."
